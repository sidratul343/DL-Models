model = Sequential()
model.add(TimeDistributed(Conv3D(64, 5, activation='relu', padding='same', name='conv1'), input_shape=(4, 128, 128, 64,1)))
#model.add(TimeDistributed(MaxPooling2D(pool_size=(2,2), strides=(2,2), padding='same', name='pool1')))

model.add(TimeDistributed(Conv3D(64, 5, activation='relu', padding='same', name='conv2')))
model.add(TimeDistributed(MaxPooling3D(pool_size=(2,2,2), strides=(2,2,2), padding='same', name='pool2')))
model.add(TimeDistributed(Dropout(0.5)))

model.add(TimeDistributed(Conv3D(128, 5, activation='relu', padding='same', name='conv3')))
#model.add(TimeDistributed(MaxPooling3D(pool_size=(2,2,2), strides=(2,2,2), padding='same', name='pool3')))
model.add(TimeDistributed(Dropout(0.5)))
model.add(TimeDistributed(Conv2D(128, 5, activation='relu', padding='same', name='conv4')))
model.add(TimeDistributed(MaxPooling3D(pool_size=(2,2,2), strides=(2,2,2), padding='same', name='pool4')))
model.add(TimeDistributed(Dropout(0.5)))

#model.add(TimeDistributed(Conv2D(64, 5, activation='relu', padding='same', name='conv4')))
#model.add(TimeDistributed(MaxPooling2D(pool_size=(2,2), strides=(2,2), padding='same', name='pool4')))
#model.add(TimeDistributed(Conv2D(64, 5, activation='relu', padding='same', name='conv4')))
#model.add(TimeDistributed(MaxPooling2D(pool_size=(2,2), strides=(2,2), padding='same', name='pool4')))

model.add(TimeDistributed(Flatten()))
model.add(LSTM(256, return_sequences=False, dropout=0.5))
model.add(Dense(1, activation='sigmoid'))
model = keras.Model(inputs = model.input, outputs = model.output, name="3dcnn")

model.summary()
